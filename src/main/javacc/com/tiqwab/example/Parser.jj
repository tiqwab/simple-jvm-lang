PARSER_BEGIN (Parser)

package com.tiqwab.example;

public class Parser {
}
PARSER_END (Parser)

// --- Definition of tokens ---

// White space
SKIP: {
    " "
    | "\t"
    | "\r"
    | "\f"
}

TOKEN: {
    < NEWLINE: "\n" >
}

// Operator
TOKEN: {
    < ADD: "+" >
    | < SUBTRACT: "-" >
    | < MULT: "*" >
    | < DIV: "/" >
}

// Symbols
TOKEN: {
    < LPAREN: "(" >
    | <RPAREN: ")" >
}

// Number
TOKEN: {
    < NUMBER: (["0"-"9"])+ >
}

// --- Translation Scheme ---

// E -> T ("+" T | "-" T)*
// T -> F ("*" T | "/" F)*
// F -> N | "(" E ")"

int start(): {
    int result;
} {
    result = expression() <NEWLINE> { return result; }
}

int expression(): {
    int result;
    int term;
} {
    result = term() (
        <ADD> term = term() { result += term; }
        | <SUBTRACT> term = term() { result -= term; }
    )* {
        return result;
    }
}

int term(): {
    int result;
    int factor;
} {
    result = factor() (
        <MULT> factor = factor() { result *= factor; }
        | <DIV> factor = factor() { result /= factor; }
        )* {
        return result;
    }
}

int factor(): {
    Token factor;
    int expr;
} {
    factor = <NUMBER> { return Integer.parseInt(factor.image); }
    | <LPAREN> expr = expression() <RPAREN> { return expr; }
}
