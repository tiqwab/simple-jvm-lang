// --- Options ---

options {
    VISITOR = true;
    MULTI = true;
}

// --- Definition of parser ---

PARSER_BEGIN (Parser)

package com.tiqwab.example;

public class Parser {
}
PARSER_END (Parser)

// --- Definition of tokens ---

// White space
SKIP: {
    " "
    | "\t"
    | "\r"
    | "\f"
}

TOKEN: {
    < NEWLINE: "\n" >
}

// Operator
TOKEN: {
    < ADD: "+" >
    | < SUBTRACT: "-" >
    | < MULT: "*" >
    | < DIV: "/" >
}

// Symbols
TOKEN: {
    < LPAREN: "(" >
    | <RPAREN: ")" >
}

// Number
TOKEN: {
    < NUMBER: (["0"-"9"])+ >
}

// --- Translation Scheme ---

// E -> T ("+" T | "-" T)*
// T -> F ("*" T | "/" F)*
// F -> N | "(" E ")"

SimpleNode Start(): {
} {
    Expression() <NEWLINE> {
        return jjtThis;
    }
}

void Expression(): {
} {
    Term() ( <ADD> Term() | <SUBTRACT> Term() )*
}

void Term(): {
} {
    Factor() ( <MULT> Factor() | <DIV> Factor() )*
}

void Factor(): {
} {
    <NUMBER>
    | <LPAREN> Expression() <RPAREN>
}
